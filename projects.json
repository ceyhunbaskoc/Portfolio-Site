[
  {
    "title": "Nightclaw",
    "shortDesc": "A 2D pixel village management game focused on strategic defense and resource management, currently in development!!",
    "longDesc": "# 🌙 Nightclaw (Still Developing) \r\n[![Unity Version](https://img.shields.io/badge/Unity-6+-black.svg?logo=unity)]\r\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://img.shields.io/badge/License-MIT-yellow.svg)]\r\n\r\nA pixel art style, side-scrolling kingdom management game. Build, defend, and expand your village using only one resource: **money**!  \r\n\r\n## 🎮 About the Game  \r\nIn **Mediavel Side Scroller Project**, your goal is to survive nightly enemy attacks while strategically expanding your village. You can only use **money** to build, upgrade, and manage your kingdom. \r\n\r\n### 🌟 Key Features  \r\n- **Unique Economy System:** Manage your kingdom using only money.  \r\n- **Dynamic Building Mechanic:** Throw money onto objects to unlock new structures and upgrades.  \r\n- **Day and Night Cycle:**  \r\n  - **Day:** Earn money through hunters, builders, and traders.  \r\n  - **Night:** Defend your village against enemy raids.  \r\n- **Village Expansion:** Upgrade your main building to increase buildable areas.  \r\n- **Command and Leadership:** Recruit commanders and artisans to empower your archers and builders.  \r\n- **Procedural Events:** Waves of enemies and resource opportunities that grow in number and variety every night.  \r\n\r\n---\r\n\r\n## 📸 Screenshots  \r\n\r\n**(The game is not finished yet, this is a demo version!!!):**\r\n\r\n**In-game footage (2x Accelerated) :**\r\n\r\n![1](Assets/GameplayVideos/video1.gif)\r\n\r\n![2](Assets/GameplayVideos/video2.gif)\r\n\r\n![3](Assets/GameplayVideos/video3.gif)\r\n\r\n![4](Assets/GameplayVideos/video4.gif)\r\n\r\n\r\n---\r\n\r\n## 🛠️ Gameplay Mechanics  \r\n\r\n### 💰 Money Sources  \r\n1. **Archers:** Earn money by killing animals during the day.  \r\n2. **Builders:** Complete construction projects to receive rewards.  \r\n3. **Traders:** Return every morning with money after being sent out at night.  \r\n\r\n### 🏰 Village Structures  \r\n- **Main Building:** Expand your kingdom and unlock new build areas.  \r\n- **Archer's Hut:** Store bows for new archers.  \r\n- **Builder's Workshop:** Store tools for new builders.  \r\n- **Market:** The place where the trader rests and upgrades are made.  \r\n- **Defense Structures:**  \r\n  - **Walls:** Basic protection against enemies.  \r\n  - **Archer Towers:** High ground for archers to defend the village.  \r\n  - **Traps:** Deal damage to enemies approaching the village.  \r\n- **Special Buildings:**  \r\n  - **Commander's Headquarters:** Boosts archer skills.  \r\n  - **Artisan's Guild:** Increases builder efficiency.  \r\n\r\n---\r\n\r\n## 🔄 How to Play  \r\n1. Start your journey with a small village and limited money.  \r\n2. Use the **money throw mechanic** to interact with objects (The player will learn these mechanics by playing!!!):  \r\n   - Throw money at stones to build **archer towers**.  \r\n   - Throw money at pile of dirt to construct **walls**.  \r\n3. Strategically recruit villagers to become **archers** or **builders**.  \r\n4. Expand your kingdom by upgrading the main building.  \r\n5. Defend against nightly enemy waves and gather enough resources to thrive.  \r\n\r\n---\r\n\r\n## 🗺️ Village Management  \r\n- **Balance Economy and Defense:** Manage your funds wisely to maintain a strong defense while growing your village.  \r\n- **Recruit and Equip:** Use your money to recruit villagers and equip them with bows or tools.  \r\n- **Build Strategically:** Choose where to place towers and walls based on enemy attack patterns.\r\n\r\n---\r\n\r\n## 🛠️ Building Construction Logic\r\n- **Our main character arrives at an object that can be turned into a building (stone, mound of earth, bush, etc.) and fills the money slots.**\r\n- **The building enters the construction process and the nearest builders rush to the construction site.**\r\n- **The more builders there are in a construction site, the faster the construction will be finished.**\r\n- **When the building is completed, a sum of money is deducted according to the value of the building and the builder receives this money.**\r\n- **Builder gives it to us when he is next to our character.**\r\n\r\n",
    "image": "img/projects/1758835173660-XWEt7r.png",
    "htmlFile": "nightclaw.html",
    "github": "https://github.com/ceyhunbaskoc/NightclawGame-Unity",
    "itch": "https://headcoach45.itch.io/nightclaw"
  },
  {
    "title": "Spinning Axe : Timber Defense",
    "shortDesc": "Defend your forest with a spinning axe, upgrade your castle, and unleash automated destruction against endless enemies.",
    "longDesc": "# 🪓 Spinning Axe: Timber Defense\r\n\r\n**[Unity | License: MIT]**  \r\n**Genre:** Idle Defense / Action Strategy  \r\n**Status:** In Development  \r\n\r\n---\r\n\r\n## 🎮 About the Game\r\n\r\n**Spinning Axe: Timber Defense** is a pixel-style idle defense and progression game where you defend your forest using a single enchanted axe.  \r\n\r\n- Your weapon **spins, slices, and smashes** through enemies and trees automatically.  \r\n- With each upgrade, it becomes **deadlier, smarter, and more powerful**.  \r\n- You **don’t directly control attacks** — your axe detects nearby enemies or trees and attacks them automatically.  \r\n- Every few hits, the axe **manifests physically for a short burst**, dealing massive damage to everything around it.  \r\n- **Goal:** survive, upgrade, and build the ultimate forest defense — your own castle — piece by piece.  \r\n\r\n---\r\n\r\n## 🌟 Key Features\r\n\r\n### 🪓 Intelligent Auto-Attack System\r\n- Automatically targets nearby enemies and trees.  \r\n- Focus on building and upgrading while the axe spins through foes.  \r\n\r\n### 💥 Active Power Burst\r\n- Every **8 hits**, the axe materializes on-screen for **5 seconds**.  \r\n- Becomes a **visual and mechanical powerhouse** of destruction.  \r\n\r\n### 🧩 14 Unique Upgrades\r\n- Unlock upgrades that **alter axe behavior** or **improve defenses**.  \r\n- Choose between:\r\n  - Attack boosts  \r\n  - Faster rotations  \r\n  - Larger detection range  \r\n  - Unique passive bonuses  \r\n\r\n### 🏰 Castle Upgrade System\r\n- Earn wood at the end of each run — used to improve your castle in the main menu.  \r\n- Castle upgrades go up to **Level 5**.  \r\n- Each level adds **one archer tower per corner**.  \r\n\r\n### 🏹 Archer Tower Integration\r\n- Castle and towers **automatically shoot arrows** at enemies.  \r\n- Strengthens the **automatic defense system**.  \r\n\r\n### 🌲 Resource-Based Progression\r\n- Gather wood from fallen trees and defeated enemies.  \r\n- Spend wood to **upgrade the castle**, enhance upgrades, and unlock new tiers of strength.  \r\n\r\n### 🎇 Particle-Rich Visuals & Feedback\r\n- Dynamic **particles, screen shakes, and smooth UI animations** for every attack and upgrade.  \r\n\r\n---\r\n\r\n## 🔄 Core Gameplay Loop\r\n\r\n1. **Defend the Forest:** Axe attacks enemies and trees automatically.  \r\n2. **Choose Upgrades:** After each wave, select from **3 random upgrades** out of 14.  \r\n3. **Earn and Collect Wood:** Survive to gather enough currency.  \r\n4. **Return to the Castle:** Spend wood to upgrade the castle.  \r\n5. **Level Up the Castle:** Each level adds new archer towers.  \r\n6. **Repeat:** Start stronger, go further, build your perfect defense.  \r\n\r\n---\r\n\r\n## 🛠️ Technical Highlights\r\n- Built entirely in **Unity (C#)** with a **custom object pooling system**.  \r\n- **Full auto-targeting AI** for axe behavior.  \r\n- Modular **UpgradeManager** system handles rarity, pool selection, and UI linking.  \r\n- Optimized for **mobile and desktop**.  \r\n- **Pause-safe unscaled particles** ensure effects play correctly even when paused.  \r\n\r\n---\r\n\r\n## 🧱 The Castle System\r\n- Castle is your **permanent progress hub**.  \r\n- **Level 1:** Basic wooden base  \r\n- **Level 2:** Adds first corner archer tower  \r\n- **Level 3:** Adds second tower and visual improvements  \r\n- **Level 4:** Third tower and sturdier structure  \r\n- **Level 5:** Full fortress with four archer towers, all firing arrows  \r\n\r\n> Each castle upgrade strengthens **both visuals and automatic defenses**.  \r\n\r\n---\r\n\r\n## 📸 Screenshots & Gameplay Preview\r\n- Auto-attacking axe slicing through waves of enemies  \r\n- Upgrade selection UI with rarity-based cards  \r\n- Castle level progression and active archer towers  \r\n- Particle-rich effects for each hit, upgrade, and level-up  \r\n\r\n---\r\n\r\n## 🧩 Design Philosophy\r\n- Built around **“automated satisfaction”**.  \r\n- Every upgrade, attack, and visual cue delivers **instant feedback** without overwhelming the player.  \r\n- Focus on **progression** — watching axe, castle, and defenses evolve naturally.  \r\n\r\n---\r\n\r\n## 🌲 Future Development\r\n- Additional upgrade types and power variants  \r\n- New enemy classes and forest environments  \r\n- More castle customization options  \r\n- Polished sound design and post-processing effects  \r\n\r\n---\r\n\r\n## ⚙️ Developer Notes\r\n- Started as an experiment in **idle mechanics and object pooling**.  \r\n- Evolved into a **fully-fledged defense system** with automation, upgrade depth, and tactile feedback.  \r\n- Optimized for **mobile**, focusing on performance, polish, and visual clarity.\r\n",
    "image": "/img/projects/1760631553487-AdsÄ±z tasarÄ±m.png",
    "htmlFile": "/spinnig-axe.html",
    "github": "https://github.com/ceyhunbaskoc/Spinning-Axe-Timber-Defense",
    "itch": "",
    "descType": "markdown"
  },
  {
    "title": "Bubble Arena",
    "shortDesc": "The game we made with a team of three at Global Game Jam 2025.",
    "longDesc": "# 🫧 Bubble Arena  \r\n*(Unity - Global Game Jam 2025)*  \r\n[![Unity Version](https://img.shields.io/badge/Unity-6+-black.svg?logo=unity)]\r\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://img.shields.io/badge/License-MIT-yellow.svg)]\r\n\r\n## 🎮 About the Game  \r\n**Bubble Arena** is a fast-paced, two-player, bubble-themed game where players control characters inside bubbles.  \r\nThe goal is to win the round by either popping the opponent's bubble or knocking them out of the arena.  \r\n\r\nYou can check here for a gameplay video : https://www.youtube.com/watch?v=e7oAYyt2GM4\r\n\r\nThis game was created in **48 hours** as part of **Global Game Jam 2025** by a team of three people: a designer, me, and another developer.  \r\nThe game features various challenging environmental hazards, such as:  \r\n\r\n- 💣 **Mines**  \r\n- 🌵 **Thorns**  \r\n- ⚙️ **Spinning Saws**  \r\n- 🪵 **Spinning Boards**  \r\n\r\n---\r\n\r\n## 💡 Features  \r\n\r\n- **Multiplayer Gameplay:** Compete against your friend in a bubble battle!  \r\n- **Ricochet Physics:** Dynamic and bouncy interactions between bubbles and the environment.  \r\n- **Challenging Arenas:** Diverse obstacles that test your reflexes and strategy.  \r\n\r\n### Graphical Enhancements:  \r\n- 🌌 **Parallax Backgrounds:** Add depth and immersion.  \r\n- ✨ **Shaders and Post-Processing:** Create a visually appealing experience.  \r\n- 🪄 **Polished UX/UI:** Simple and intuitive interface to keep the focus on action.  \r\n\r\n---\r\n\r\n## 🛠️ My Contributions  \r\n- **Gameplay Mechanics:** Implemented bubble movement, collision, and popping logic.  \r\n- **Parallax Background:** Created dynamic backgrounds to enhance visual depth.  \r\n- **Camera System:** Developed smooth camera transitions and dynamic framing.  \r\n- **UI/UX Design:** Designed user-friendly menus and in-game HUD.  \r\n\r\n---\r\n\r\n## 📸 Screenshots  \r\n**in-game Screenshots :**\r\n\r\n![Ss1](Assets/Screenshots/1.png)\r\n\r\n![Ss2](Assets/Screenshots/2.png)\r\n\r\n---\r\n\r\n## 🚀 How to Play  \r\n**Objective:** Pop the opponent's bubble or push them out of the arena.  \r\n\r\n**Controls:** Move around and utilize environmental objects to your advantage.  \r\n\r\n**Tips:**  \r\n- Use ricochet physics strategically to bounce opponents into hazards.  \r\n- Watch out for moving obstacles!\r\n",
    "image": "/img/projects/1760632801218-pp.jpg",
    "htmlFile": "/bubble-arena.html",
    "github": "https://github.com/ceyhunbaskoc/BubbleArena-Unity-GloablGameJam2025",
    "itch": "",
    "descType": "markdown"
  },
  {
    "title": "PixelDungeonRogueLikeProject",
    "shortDesc": "This is a pixel dungeon crawler game I developed in 2D. I am still developing it!",
    "longDesc": "# 🎮 Pixel Dungeon Rogue Like Project (Still Developing)\r\n\r\n[![Unity Version](https://img.shields.io/badge/Unity-6+-black.svg?logo=unity)]\r\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://img.shields.io/badge/License-MIT-yellow.svg)]\r\n\r\n A dungeon crawler game in **Top-down pixel art** style, with rooms and corridors. Explore randomly generated maps, fight enemies and collect treasures!  \r\n\r\n---\r\n\r\n## 📸 Screenshots \r\n**Procedural dungeon generation :**\r\n\r\n![Map Screenshot 1](Assets/Screenshots/1.png) \r\n\r\n![Map Screenshot 2](Assets/Screenshots/2.png) \r\n\r\n![Map Screenshot 3](Assets/Screenshots/3.png)\r\n\r\n**In-game Screenshots (The game is not finished yet, this is just a gameplay demo!!!):**\r\n\r\n![Ingame Screenshot 1](Assets/Screenshots/4.png) \r\n\r\n![Ingame Screenshot 2](Assets/Screenshots/5.png)\r\n\r\n---\r\n\r\n## 🛠️ Features \r\n- **Procedural dungeon generation** (Randomly generated map) \r\n- **Pixel art graphics** \r\n- **Room-corridor linked map system** \r\n- **Enemy AI and combat mechanics** \r\n- **Item collection and inventory management** \r\n\r\n## 🛠️ Map generation logic\r\n- **When the game starts, rooms are placed according to the randomly generated map.**\r\n- **Corridors are placed between the rooms.**\r\n- **After the rooms are formed, each room determines for itself in which directions there are neighbors or not.**\r\n- **The rooms find their own borders and if there are neighbors in that direction, they put a wall if there is no corridor door.**\r\n\r\n## Extra Information\r\n- **When the character enters the dungeon, the doors automatically close and after all waves are over, the doors open and the character continues the game.**\r\n",
    "image": "/img/projects/3.png",
    "htmlFile": "/pixel-dungeon.html",
    "github": "https://github.com/ceyhunbaskoc/PixelDungeonRogueLikeProject-Unity",
    "itch": "",
    "descType": "markdown"
  },
  {
    "title": "Stellaris : Anxiety",
    "shortDesc": "This is a pixel dungeon crawler game I developed in 2D. I am still developing it!",
    "longDesc": "# 🌌 Stellaris : Anxiety\r\n(Unity –Mağara Jam 25)  \r\n[Unity Version] [License: MIT]  \r\n\r\n🎮 **About the Game**  \r\n**Space Crew Survival** is a solo project I developed in **48 hours** for **Cave Jam 25**! 🚀  \r\nIn this game, you control a 4-person crew and your goal is to manage their stress levels. The higher the stress, the lower the oxygen! Players must prevent oxygen from dropping below 10% while completing tasks and keeping the crew alive.  \r\n\r\nRandomly spawned **9 different objects** can either increase or decrease crew stress. Players need to experiment and discover which objects have positive or negative effects, forming the core strategic mechanic of the game.  \r\n\r\n🌠 **Meteor Mini-Game**  \r\nOutside the main spaceship area, a mini-game occasionally triggers. Meteors fall towards the ship, and players must dodge them for **10 seconds**. Colliding with meteors increases crew stress, adding reflex-based challenges to the core stress management gameplay.  \r\n\r\n💡 **Features**  \r\n- **Crew Management:** Control stress levels of 4 crew members to keep oxygen above 10%.  \r\n- **Stress & Oxygen Mechanics:** Interact with 9 different objects to strategically manage stress.  \r\n- **Meteor Dodge Mini-Game:** Reflex and strategy combined; survive meteor showers for 10 seconds.  \r\n- **Random Spawning:** Objects and meteors spawn at random positions and speeds, ensuring every playthrough is unique.  \r\n- **Solo Development:** Despite starting **24 hours late**, I completed this game **alone in 48 hours**.  \r\n\r\n🛠️ **My Contributions**  \r\n- **Gameplay Mechanics:** Implemented stress and oxygen management, object interactions, meteor collisions, and mini-game logic.  \r\n- **UI/UX:** Designed visual indicators for stress levels and oxygen status for intuitive crew management.  \r\n- **Procedural Spawning:** Randomized object and meteor spawns with varying positions and speeds.  \r\n- **Camera System:** Smooth, delayed camera following for both spaceship navigation and mini-game.  \r\n- **Game Logic:** Coordinated crew and mini-game mechanics, balancing stress and oxygen systems.  \r\n-**In Short, Everything!\r\n\r\n📸 **Screenshots / Gameplay Footage**  \r\n_(Insert development screenshots or demo videos here)_  \r\n\r\n🚀 **How to Play**  \r\n- **Objective:** Keep the crew’s oxygen above 10% while managing stress and surviving meteor mini-games.  \r\n- **Controls:**  \r\n  - Arrow Keys / WASD: Move the crew / navigate the spaceship in the meteor mini-game.  \r\n- **Tips:**  \r\n  - Pay attention to spawned objects: Some increase stress, some reduce it.  \r\n  - Avoid meteor collisions in mini-game to prevent stress spikes.  \r\n  - High stress rapidly depletes oxygen—manage carefully!",
    "image": "/img/projects/1760634333050-stellaris.png",
    "htmlFile": "/stellaris.html",
    "github": "",
    "itch": "",
    "descType": "markdown"
  },
  {
    "title": "Hyper Pong",
    "shortDesc": "A hyper-casual ball-bouncing game where you control the center square and keep the ball out. Published by our university team on Google Play.",
    "longDesc": "# Hyper Pong\r\n**Hyper Casual Game – University Team Project**  \r\n\r\nHyper Pong is a fast-paced hyper-casual game where the player controls a center square and must bounce a ball between the surrounding line and the square, avoiding letting it fall inside.  \r\n\r\nI was responsible for **gameplay mechanics, shader effects, graphics, physics, and ad support** during development. The game combines precise timing, simple controls, and addictive mechanics to create a fun, challenging experience.  \r\n\r\nIt was developed as part of our university team project (Panoptis) and has been published on Google Play with integrated ad support.  \r\n\r\n[Play on Google Play](https://play.google.com/store/apps/details?id=com.PanoptisGame.HyperPong)",
    "image": "/img/projects/1760635063239-hyperPong.webp",
    "htmlFile": "/hyper-pong.html",
    "github": "",
    "itch": "",
    "descType": "markdown"
  },
  {
    "title": "Jelly Fit",
    "shortDesc": "Created during my UDO Games Summer Internship 2025: Drag, drop, and cut cube groups to perfectly fill target boxes in this 3D puzzle challenge.",
    "longDesc": "# 🟢 Jelly Fit (Unity – UDO Games Summer Internship 2025)\r\n\r\n**[Unity | UDO Games Summer Internship 2025]**  \r\n\r\n**Genre:** 3D Puzzle / Logic Game  \r\n**Status:** Completed Internship Project  \r\n\r\n---\r\n\r\n## 🎮 About the Game\r\n\r\n**Jelly Fit** is a 3D puzzle game designed to challenge the player’s logical reasoning and spatial awareness.  \r\nThe goal is to fit differently shaped cube groups into a confined target box without spilling or leaving empty spaces.  \r\nPlayers can drag, drop, and even cut cubes when necessary to complete the puzzle successfully.  \r\n\r\nThe game emphasizes strategic planning and problem-solving, making each level a fun and rewarding experience.\r\n\r\n---\r\n\r\n## 🌟 Key Features\r\n\r\n### 🟢 Drag & Drop Mechanics\r\n- Select and move cube groups intuitively.  \r\n- Rotate or position cubes to fit them inside the target box.  \r\n\r\n### ✂️ Cutting Mechanics\r\n- Split cube groups to better match the shape of the target box.  \r\n- Allows creative solutions for complex puzzles.  \r\n\r\n### 🧩 Logical Puzzle Design\r\n- Levels are designed to increase in complexity gradually.  \r\n- Encourages players to think ahead and plan moves strategically.  \r\n\r\n### 🔲 Grid System\r\n- The grid system ensures precise placement of cubes.  \r\n- Tracks filled and empty cells for accurate puzzle completion.  \r\n\r\n### 🎵 Audio & Animations\r\n- Sound manager handles feedback for dragging, dropping, and cutting.  \r\n- Smooth animations enhance visual feedback and gameplay satisfaction.  \r\n\r\n### 🕹️ Gameplay Loop\r\n1. Observe the target box shape.  \r\n2. Drag and drop cube groups into the box.  \r\n3. Cut or rotate cubes as necessary to fill the box completely.  \r\n4. Complete the puzzle without spilling cubes.  \r\n5. Advance to more challenging levels with larger grids or irregular shapes.  \r\n\r\n---\r\n\r\n## 🛠️ Technical Highlights\r\n\r\n- Built entirely in **Unity** using **C#**.  \r\n- Grid system ensures perfect alignment and placement detection.  \r\n- Drag & drop mechanics include collision detection and smooth snapping.  \r\n- Cutting mechanic dynamically splits cube groups into smaller units.  \r\n- Fully modular sound manager supporting multiple feedback cues.  \r\n- Optimized for both desktop and mobile platforms.  \r\n\r\n---\r\n\r\n## 🎯 Developer Contribution\r\n\r\nDuring the internship, my main responsibilities included:\r\n\r\n- **Gameplay Systems:** Created the grid system and logic for full/empty cell detection.  \r\n- **Drag & Drop Mechanics:** Developed smooth, responsive cube movement and snapping.  \r\n- **Cutting Mechanics:** Designed and implemented the ability to split cube groups.  \r\n- **Sound & Animations:** Built the sound manager and linked animations to gameplay actions.  \r\n\r\n---\r\n\r\n## 📂 Links\r\n\r\n- **Google Drive (Game Files):** [Jelly Fit Drive Link](https://drive.google.com/drive/folders/1UqoNiixfYQvgZij_wiDYtBEaXFdwyiuq?usp=sharing)  \r\n- **GitHub Repository:** [Jelly Fit GitHub](https://github.com/UdoStaj/JellyFit)  \r\n\r\n---\r\n\r\n## 🧩 Design Philosophy\r\n\r\n**Jelly Fit** focuses on **cognitive satisfaction**:  \r\n- Immediate visual and audio feedback for every action.  \r\n- Encourages logical thinking and experimentation.  \r\n- Each puzzle is solvable but requires careful planning.  \r\n\r\n---\r\n\r\n## 🌲 Future Development Ideas\r\n\r\n- Additional cube shapes and sizes.  \r\n- Dynamic obstacles inside the target box for extra challenge.  \r\n- Level editor for user-generated puzzles.  \r\n- Enhanced visual polish and particle effects for interactions.  ",
    "image": "/img/projects/1760635961629-Logo.png",
    "htmlFile": "/jelly-fit.html",
    "github": "https://github.com/UdoStaj/JellyFit",
    "itch": "",
    "descType": "markdown"
  }
]